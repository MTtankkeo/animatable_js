class s{constructor(s){this.callback=s,this.isDisposed=!1,this.id=requestAnimationFrame(this.handle=this.handle.bind(this))}handle(s){var t;if(this.isDisposed)return;const e=s-(null!==(t=this.previousElapsed)&&void 0!==t?t:s);this.previousElapsed=s,this.callback(e),this.id=requestAnimationFrame(this.handle)}dispose(){this.isDisposed=!0,cancelAnimationFrame(this.id)}}var t;!function(s){s[s.NONE=0]="NONE",s[s.FORWARD=1]="FORWARD",s[s.FORWARDED=2]="FORWARDED",s[s.BACKWARD=3]="BACKWARD",s[s.BACKWARDED=4]="BACKWARDED"}(t||(t={}));class e{}class i extends e{get status(){return this._status}set status(s){this._status!=s&&(this._status=s,this.notifyStatusListeners(this.status))}get value(){return this._value}set value(s){this._value!=s&&(this._value=s,this.notifyListeners(this.value))}constructor(s,e){super(),this.listeners=[],this.statusListeners=[],this._status=t.NONE,this.value=s,this.duration=e}addListener(s){console.assert(!this.listeners.includes(s),"Already a given listener does exist."),this.listeners.push(s)}removeListener(s){console.assert(this.listeners.includes(s),"Already a given listener does not exist."),this.listeners=this.listeners.filter((t=>t!=s))}addStatusListener(s){console.assert(!this.statusListeners.includes(s),"Already a given status listener does exist."),this.statusListeners.push(s)}removeStatusListener(s){console.assert(this.statusListeners.includes(s),"Already a given status listener does not exist."),this.statusListeners=this.statusListeners.filter((t=>t!=s))}notifyListeners(s){this.listeners.forEach((t=>t(s)))}notifyStatusListeners(s){this.statusListeners.forEach((t=>t(s)))}animateTo(s,t){this.animate(this.value,s,t)}animate(e,i,a=this.duration){var n;if(i==e)return;this.value=e;const r=i>e;this.status=r?t.FORWARD:t.BACKWARD,null===(n=this.activeTicker)||void 0===n||n.dispose(),this.activeTicker=new s((s=>{const n=s/a,h=r?n:-n,u=this.consume(e,i,h);Math.abs(h-u)>1e-6?(this.value=i,this.dispose(),this.status=r?t.FORWARDED:t.BACKWARDED):this.value+=u}))}consume(s,t,e){const i=t-(this.value+e);return t>s?i<=0?i:e:i>=0?i:e}dispose(){this.activeTicker.dispose(),this.activeTicker=null}}export{e as Animatable,i as Animation,t as AnimationStatus,s as Ticker};
//# sourceMappingURL=index.js.map
